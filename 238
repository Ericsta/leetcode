class Solution:
    def productExceptSelf(self, nums: List[int]) -> List[int]:
    #     lenth = len(nums)
    #     L,R,out=[1]*lenth,[1]*lenth,[1]*lenth
    #     for i in range(1,lenth):
    #        # print(i,nums[i-1],L[i-1])
    #         L[i]=nums[i-1]*L[i-1]
    #     for i in range(lenth-1,0,-1):  
    #         #print(i,nums[i],R[i])      
    #         R[i-1]=nums[i]*R[i]     
    #    # print(R)
    #     for i in range(lenth):
    #         out[i] = L[i]*R[i]
    #     return out
        lenth = len(nums)
        answer = [1]*lenth
        for i in range(1,lenth):
            answer[i]=nums[i-1]*answer[i-1]
        print(answer)
        R =1
        for i in reversed(range(lenth)):
            answer[i] = answer[i] * R
            R *= nums[i]
        
        return answer

